// Code generated by BobGen sqlite v0.22.0. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"github.com/aarondl/opt/null"
	"github.com/stephenafamo/bob"
	"github.com/stephenafamo/bob/dialect/sqlite"
)

// Category is an object representing the database table.
type Category struct {
	CatName null.Val[string] `db:"cat_name" `
}

// CategorySlice is an alias for a slice of pointers to Category.
// This should almost always be used instead of []*Category.
type CategorySlice []*Category

// Categories contains methods to work with the categories view
var Categories = sqlite.NewViewx[*Category, CategorySlice]("", "categories")

// CategoriesQuery is a query on the categories view
type CategoriesQuery = *sqlite.ViewQuery[*Category, CategorySlice]

// CategoriesStmt is a prepared statment on categories
type CategoriesStmt = bob.QueryStmt[*Category, CategorySlice]

type categoryColumnNames struct {
	CatName string
}

var CategoryColumns = struct {
	CatName sqlite.Expression
}{
	CatName: sqlite.Quote("categories", "cat_name"),
}

type categoryWhere[Q sqlite.Filterable] struct {
	CatName sqlite.WhereNullMod[Q, string]
}

func CategoryWhere[Q sqlite.Filterable]() categoryWhere[Q] {
	return categoryWhere[Q]{
		CatName: sqlite.WhereNull[Q, string](CategoryColumns.CatName),
	}
}
