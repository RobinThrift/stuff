// Code generated by BobGen sqlite v0.22.0. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"github.com/aarondl/opt/null"
	"github.com/stephenafamo/bob"
	"github.com/stephenafamo/bob/dialect/sqlite"
)

// Model is an object representing the database table.
type Model struct {
	Model   null.Val[string] `db:"model" `
	ModelNo null.Val[string] `db:"model_no" `
}

// ModelSlice is an alias for a slice of pointers to Model.
// This should almost always be used instead of []*Model.
type ModelSlice []*Model

// Models contains methods to work with the models view
var Models = sqlite.NewViewx[*Model, ModelSlice]("", "models")

// ModelsQuery is a query on the models view
type ModelsQuery = *sqlite.ViewQuery[*Model, ModelSlice]

// ModelsStmt is a prepared statment on models
type ModelsStmt = bob.QueryStmt[*Model, ModelSlice]

type modelColumnNames struct {
	Model   string
	ModelNo string
}

var ModelColumns = struct {
	Model   sqlite.Expression
	ModelNo sqlite.Expression
}{
	Model:   sqlite.Quote("models", "model"),
	ModelNo: sqlite.Quote("models", "model_no"),
}

type modelWhere[Q sqlite.Filterable] struct {
	Model   sqlite.WhereNullMod[Q, string]
	ModelNo sqlite.WhereNullMod[Q, string]
}

func ModelWhere[Q sqlite.Filterable]() modelWhere[Q] {
	return modelWhere[Q]{
		Model:   sqlite.WhereNull[Q, string](ModelColumns.Model),
		ModelNo: sqlite.WhereNull[Q, string](ModelColumns.ModelNo),
	}
}
