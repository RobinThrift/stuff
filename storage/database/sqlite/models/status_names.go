// Code generated by BobGen sqlite v0.22.0. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"github.com/aarondl/opt/null"
	"github.com/stephenafamo/bob"
	"github.com/stephenafamo/bob/dialect/sqlite"
)

// StatusName is an object representing the database table.
type StatusName struct {
	Name null.Val[string] `db:"name" `
}

// StatusNameSlice is an alias for a slice of pointers to StatusName.
// This should almost always be used instead of []*StatusName.
type StatusNameSlice []*StatusName

// StatusNames contains methods to work with the status_names view
var StatusNames = sqlite.NewViewx[*StatusName, StatusNameSlice]("", "status_names")

// StatusNamesQuery is a query on the status_names view
type StatusNamesQuery = *sqlite.ViewQuery[*StatusName, StatusNameSlice]

// StatusNamesStmt is a prepared statment on status_names
type StatusNamesStmt = bob.QueryStmt[*StatusName, StatusNameSlice]

type statusNameColumnNames struct {
	Name string
}

var StatusNameColumns = struct {
	Name sqlite.Expression
}{
	Name: sqlite.Quote("status_names", "name"),
}

type statusNameWhere[Q sqlite.Filterable] struct {
	Name sqlite.WhereNullMod[Q, string]
}

func StatusNameWhere[Q sqlite.Filterable]() statusNameWhere[Q] {
	return statusNameWhere[Q]{
		Name: sqlite.WhereNull[Q, string](StatusNameColumns.Name),
	}
}
