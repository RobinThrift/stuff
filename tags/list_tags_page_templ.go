// Code generated by templ@v0.2.316 DO NOT EDIT.

package tags

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "time"
import "fmt"
import "github.com/kodeshack/stuff/views"

type listTagsPageProps struct {
	tags    []*Tag
	total   int
	query   listTagsQuery
	infomsg string
}

func listTagsPage(props listTagsPageProps) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var_2 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			_, err = templBuffer.WriteString("<header class=\"my-5 flex items-end\"><h1 class=\"font-extrabold md:text-2xl lg:text-4xl\">")
			if err != nil {
				return err
			}
			var_3 := `Tags`
			_, err = templBuffer.WriteString(var_3)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h1></header> <table class=\"min-w-full divide-y divide-neutral-200\"><thead><tr class=\"text-neutral-500\"><th class=\"first:pl-0 last:pr-0 py-3 text-xs font-medium text-left uppercase\"><div class=\"flex items-center\"><input id=\"selected_all\" type=\"checkbox\" class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500\"><label for=\"selected_all\" class=\"sr-only\">")
			if err != nil {
				return err
			}
			var_4 := `checkbox`
			_, err = templBuffer.WriteString(var_4)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label></div></th><th class=\"first:pl-0 last:pr-0 px-5 py-3 text-xs font-medium text-left uppercase\">")
			if err != nil {
				return err
			}
			var_5 := `Tag`
			_, err = templBuffer.WriteString(var_5)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"first:pl-0 last:pr-0 px-5 py-3 text-xs font-medium text-left uppercase\">")
			if err != nil {
				return err
			}
			var_6 := `In Use`
			_, err = templBuffer.WriteString(var_6)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"first:pl-0 last:pr-0 px-5 py-3 text-xs font-medium text-left uppercase\">")
			if err != nil {
				return err
			}
			var_7 := `Last Updated`
			_, err = templBuffer.WriteString(var_7)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th></tr></thead><tbody class=\"divide-y divide-neutral-200\" x-data=\"{ open: {} }\">")
			if err != nil {
				return err
			}
			for _, tag := range props.tags {
				_, err = templBuffer.WriteString("<tr class=\"text-neutral-800\"><td class=\"first:pl-0 last:pr-0 py-4 text-sm whitespace-nowrap\"><div class=\"flex items-center\"><input id=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("selected_%v", tag.ID)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" name=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("selected_%v", tag.ID)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" type=\"checkbox\" class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500\"><label for=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("selected_%v", tag.ID)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" class=\"sr-only\">")
				if err != nil {
					return err
				}
				var var_8 string = fmt.Sprintf("selectk%v", tag.ID)
				_, err = templBuffer.WriteString(templ.EscapeString(var_8))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</label></div></td><td class=\"px-5 py-4 text-sm whitespace-nowrap\"><strong>")
				if err != nil {
					return err
				}
				var var_9 string = tag.Tag
				_, err = templBuffer.WriteString(templ.EscapeString(var_9))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</strong></td><td class=\"px-5 py-4 text-sm whitespace-nowrap\"><strong>")
				if err != nil {
					return err
				}
				var var_10 string = fmt.Sprint(tag.InUse)
				_, err = templBuffer.WriteString(templ.EscapeString(var_10))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</strong></td><td class=\"px-5 py-4 text-sm whitespace-nowrap\"><strong>")
				if err != nil {
					return err
				}
				var var_11 string = tag.UpdatedAt.Format(time.RFC3339)
				_, err = templBuffer.WriteString(templ.EscapeString(var_11))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</strong></td></tr>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</tbody></table> ")
			if err != nil {
				return err
			}
			if len(props.tags) != 0 {
				_, err = templBuffer.WriteString("<div class=\"flex items-center justify-between w-full h-16 px-3 border-t border-neutral-200\"><p class=\"pl-2 text-sm text-gray-700\">")
				if err != nil {
					return err
				}
				var_12 := `Showing `
				_, err = templBuffer.WriteString(var_12)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("<span class=\"font-medium\">")
				if err != nil {
					return err
				}
				var var_13 string = fmt.Sprint(props.query.offset + 1)
				_, err = templBuffer.WriteString(templ.EscapeString(var_13))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span> ")
				if err != nil {
					return err
				}
				var_14 := `to `
				_, err = templBuffer.WriteString(var_14)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("<span class=\"font-medium\">")
				if err != nil {
					return err
				}
				var var_15 string = fmt.Sprint(props.query.offset + props.total)
				_, err = templBuffer.WriteString(templ.EscapeString(var_15))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span> ")
				if err != nil {
					return err
				}
				var_16 := `of `
				_, err = templBuffer.WriteString(var_16)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("<span class=\"font-medium\">")
				if err != nil {
					return err
				}
				var var_17 string = fmt.Sprint(props.total)
				_, err = templBuffer.WriteString(templ.EscapeString(var_17))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span> ")
				if err != nil {
					return err
				}
				var_18 := `tags`
				_, err = templBuffer.WriteString(var_18)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p><nav><ul class=\"flex items-center text-sm leading-tight bg-white border divide-x rounded h-9 text-neutral-500 divide-neutral-200 border-neutral-200\"><li class=\"h-full\"><a href=\"#\" class=\"relative inline-flex items-center h-full px-3 ml-0 rounded-l group hover:text-blue-500\"><span>")
				if err != nil {
					return err
				}
				var_19 := `Previous`
				_, err = templBuffer.WriteString(var_19)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></a></li><li class=\"hidden h-full md:block\"><a href=\"#\" class=\"relative inline-flex items-center h-full px-3 text-neutral-900 group bg-gray-50\"><span>")
				if err != nil {
					return err
				}
				var_20 := `1`
				_, err = templBuffer.WriteString(var_20)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span><span class=\"box-content absolute bottom-0 left-0 w-full h-px -mx-px translate-y-px border-l border-r bg-blue-500 border-blue-500\"></span></a></li><li class=\"hidden h-full md:block\"><a href=\"#\" class=\"relative inline-flex items-center h-full px-3 group hover:text-neutral-900\"><span>")
				if err != nil {
					return err
				}
				var_21 := `2`
				_, err = templBuffer.WriteString(var_21)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span><span class=\"box-content absolute bottom-0 w-0 h-px -mx-px duration-200 ease-out translate-y-px border-transparent bg-blue-500 group-hover:border-l group-hover:border-r group-hover:border-blue-500 left-1/2 group-hover:left-0 group-hover:w-full\"></span></a></li><li class=\"hidden h-full md:block\"><div class=\"relative inline-flex items-center h-full px-2.5 group\"><span>")
				if err != nil {
					return err
				}
				var_22 := `...`
				_, err = templBuffer.WriteString(var_22)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></div></li><li class=\"hidden h-full md:block\"><a href=\"#\" class=\"relative inline-flex items-center h-full px-3 group hover:text-neutral-900\"><span>")
				if err != nil {
					return err
				}
				var_23 := `6`
				_, err = templBuffer.WriteString(var_23)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span><span class=\"box-content absolute bottom-0 w-0 h-px -mx-px duration-200 ease-out translate-y-px border-transparent bg-blue-500 group-hover:border-l group-hover:border-r group-hover:border-blue-500 left-1/2 group-hover:left-0 group-hover:w-full\"></span></a></li><li class=\"hidden h-full md:block\"><a href=\"#\" class=\"relative inline-flex items-center h-full px-3 group hover:text-neutral-900\"><span>")
				if err != nil {
					return err
				}
				var_24 := `7`
				_, err = templBuffer.WriteString(var_24)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span><span class=\"box-content absolute bottom-0 w-0 h-px -mx-px duration-200 ease-out translate-y-px border-transparent bg-blue-500 group-hover:border-l group-hover:border-r group-hover:border-blue-500 left-1/2 group-hover:left-0 group-hover:w-full\"></span></a></li><li class=\"h-full\"><a href=\"#\" class=\"relative inline-flex items-center h-full px-3 ml-0 rounded-l group hover:text-blue-500\"><span>")
				if err != nil {
					return err
				}
				var_25 := `Next`
				_, err = templBuffer.WriteString(var_25)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></a></li></ul></nav></div>")
				if err != nil {
					return err
				}
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = views.Layout().Render(templ.WithChildren(ctx, var_2), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}
