// Code generated by templ@v0.2.316 DO NOT EDIT.

package assets

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "fmt"
import "github.com/kodeshack/stuff/views"

type listAssetsPageProps struct {
	assets  []*Asset
	total   int
	query   listAssetsQuery
	infomsg string
}

func listAssetsPage(props listAssetsPageProps) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var_2 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			_, err = templBuffer.WriteString("<header class=\"my-5 flex items-end\"><h1 class=\"font-extrabold md:text-2xl lg:text-4xl\">")
			if err != nil {
				return err
			}
			var_3 := `Assets`
			_, err = templBuffer.WriteString(var_3)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h1>")
			if err != nil {
				return err
			}
			var_4 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
				templBuffer, templIsBuffer := w.(*bytes.Buffer)
				if !templIsBuffer {
					templBuffer = templ.GetBuffer()
					defer templ.ReleaseBuffer(templBuffer)
				}
				var_5 := `New Asset `
				_, err = templBuffer.WriteString(var_5)
				if err != nil {
					return err
				}
				if !templIsBuffer {
					_, err = io.Copy(w, templBuffer)
				}
				return err
			})
			err = views.ButtonLink("/assets/new", "ml-8").Render(templ.WithChildren(ctx, var_4), templBuffer)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</header> <table class=\"min-w-full divide-y divide-neutral-200\"><thead><tr class=\"text-neutral-500\"><th class=\"first:pl-0 last:pr-0 py-3 text-xs font-medium text-left uppercase\"><div class=\"flex items-center\"><input id=\"selected_all\" type=\"checkbox\" class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500\"><label for=\"selected_all\" class=\"sr-only\">")
			if err != nil {
				return err
			}
			var_6 := `checkbox`
			_, err = templBuffer.WriteString(var_6)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label></div></th><th class=\"first:pl-0 last:pr-0 py-3 text-xs font-medium text-left uppercase\"></th><th class=\"first:pl-0 last:pr-0 px-5 py-3 text-xs font-medium text-left uppercase\">")
			if err != nil {
				return err
			}
			var_7 := `Tag`
			_, err = templBuffer.WriteString(var_7)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"first:pl-0 last:pr-0 px-5 py-3 text-xs font-medium text-left uppercase\">")
			if err != nil {
				return err
			}
			var_8 := `Image`
			_, err = templBuffer.WriteString(var_8)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"first:pl-0 last:pr-0 px-5 py-3 text-xs font-medium text-left uppercase\">")
			if err != nil {
				return err
			}
			var_9 := `Name`
			_, err = templBuffer.WriteString(var_9)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"first:pl-0 last:pr-0 px-5 py-3 text-xs font-medium text-left uppercase\">")
			if err != nil {
				return err
			}
			var_10 := `Category`
			_, err = templBuffer.WriteString(var_10)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"first:pl-0 last:pr-0 px-5 py-3 text-xs font-medium text-left uppercase\">")
			if err != nil {
				return err
			}
			var_11 := `Location`
			_, err = templBuffer.WriteString(var_11)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"first:pl-0 last:pr-0 px-5 py-3 text-xs font-medium text-left uppercase\">")
			if err != nil {
				return err
			}
			var_12 := `Status`
			_, err = templBuffer.WriteString(var_12)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"first:pl-0 last:pr-0 px-5 py-3 text-xs font-medium text-right uppercase\">")
			if err != nil {
				return err
			}
			var_13 := `Actions`
			_, err = templBuffer.WriteString(var_13)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th></tr></thead><tbody class=\"divide-y divide-neutral-200\" x-data=\"{ open: {} }\">")
			if err != nil {
				return err
			}
			for _, asset := range props.assets {
				_, err = templBuffer.WriteString("<tr class=\"text-neutral-800\"><td class=\"first:pl-0 last:pr-0 py-4 text-sm whitespace-nowrap\"><div class=\"flex items-center\"><input id=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("selected_%v", asset.ID)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" name=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("selected_%v", asset.ID)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" type=\"checkbox\" class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500\"><label for=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("selected_%v", asset.ID)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" class=\"sr-only\">")
				if err != nil {
					return err
				}
				var var_14 string = fmt.Sprintf("selectk%v", asset.ID)
				_, err = templBuffer.WriteString(templ.EscapeString(var_14))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</label></div></td><td class=\"py-4 text-sm whitespace-nowrap\"><button class=\"border-0 bg-transparent text-blue-400 hover:text-purple-500\" @click=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("open['%d'] = !open['%d'];", asset.ID, asset.ID)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" hx-trigger=\"click once\" hx-get=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("/assets/%d", asset.ID)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" hx-target=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("#view-%d", asset.ID)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" hx-select=\"#main\"><span x-bind:class=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("open['%d'] ? 'rotate-90' : ''", asset.ID)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" class=\"transition-transform inline-block\">")
				if err != nil {
					return err
				}
				err = views.Icon("caret-right", "w-[16px] h-[16px]").Render(ctx, templBuffer)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></button></td><td class=\"px-5 py-4 text-sm whitespace-nowrap\"><a class=\"hover:text-purple-500\" href=\"")
				if err != nil {
					return err
				}
				var var_15 templ.SafeURL = templ.SafeURL(fmt.Sprintf("/assets/%v", asset.ID))
				_, err = templBuffer.WriteString(templ.EscapeString(string(var_15)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"><strong>")
				if err != nil {
					return err
				}
				var var_16 string = asset.Tag
				_, err = templBuffer.WriteString(templ.EscapeString(var_16))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</strong></a></td><td class=\"px-5 py-4 text-sm whitespace-nowrap\">")
				if err != nil {
					return err
				}
				if asset.ThumbnailURL != "" {
					_, err = templBuffer.WriteString("<img class=\"h-[50px]\" src=\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(templ.EscapeString(asset.ThumbnailURL))
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("\">")
					if err != nil {
						return err
					}
				}
				_, err = templBuffer.WriteString("</td><td class=\"px-5 py-4 text-sm whitespace-nowrap\"><a class=\"hover:text-purple-500\" href=\"")
				if err != nil {
					return err
				}
				var var_17 templ.SafeURL = templ.SafeURL(fmt.Sprintf("/assets/%v", asset.ID))
				_, err = templBuffer.WriteString(templ.EscapeString(string(var_17)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\">")
				if err != nil {
					return err
				}
				var var_18 string = asset.Name
				_, err = templBuffer.WriteString(templ.EscapeString(var_18))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</a></td><td class=\"px-5 py-4 text-sm whitespace-nowrap\">")
				if err != nil {
					return err
				}
				var var_19 string = asset.Category
				_, err = templBuffer.WriteString(templ.EscapeString(var_19))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</td><td class=\"px-5 py-4 text-sm whitespace-nowrap\">")
				if err != nil {
					return err
				}
				var var_20 string = asset.Location
				_, err = templBuffer.WriteString(templ.EscapeString(var_20))
				if err != nil {
					return err
				}
				if asset.PositionCode != "" {
					var_21 := `(`
					_, err = templBuffer.WriteString(var_21)
					if err != nil {
						return err
					}
					var var_22 string = asset.PositionCode
					_, err = templBuffer.WriteString(templ.EscapeString(var_22))
					if err != nil {
						return err
					}
					var_23 := `)`
					_, err = templBuffer.WriteString(var_23)
					if err != nil {
						return err
					}
				}
				_, err = templBuffer.WriteString("</td><td class=\"py-4 text-sm whitespace-nowrap\">")
				if err != nil {
					return err
				}
				err = statusBadge(asset.Status, "").Render(ctx, templBuffer)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</td><td class=\"last:pr-0 px-5 py-4 text-sm font-medium text-right whitespace-nowrap\"><a class=\"text-blue-400 hover:text-purple-500\" href=\"")
				if err != nil {
					return err
				}
				var var_24 templ.SafeURL = templ.SafeURL(fmt.Sprintf("/assets/%v/edit", asset.ID))
				_, err = templBuffer.WriteString(templ.EscapeString(string(var_24)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\">")
				if err != nil {
					return err
				}
				var_25 := `Edit`
				_, err = templBuffer.WriteString(var_25)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</a></td></tr> <tr x-show=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("open['%d']", asset.ID)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"><td id=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("view-%d", asset.ID)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" colspan=\"9\"></td></tr>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</tbody></table> ")
			if err != nil {
				return err
			}
			if len(props.assets) != 0 {
				_, err = templBuffer.WriteString("<div class=\"flex items-center justify-between w-full h-16 px-3 border-t border-neutral-200\"><p class=\"pl-2 text-sm text-gray-700\">")
				if err != nil {
					return err
				}
				var_26 := `Showing `
				_, err = templBuffer.WriteString(var_26)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("<span class=\"font-medium\">")
				if err != nil {
					return err
				}
				var var_27 string = fmt.Sprint(props.query.offset + 1)
				_, err = templBuffer.WriteString(templ.EscapeString(var_27))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span> ")
				if err != nil {
					return err
				}
				var_28 := `to `
				_, err = templBuffer.WriteString(var_28)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("<span class=\"font-medium\">")
				if err != nil {
					return err
				}
				var var_29 string = fmt.Sprint(props.query.offset + props.total)
				_, err = templBuffer.WriteString(templ.EscapeString(var_29))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span> ")
				if err != nil {
					return err
				}
				var_30 := `of `
				_, err = templBuffer.WriteString(var_30)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("<span class=\"font-medium\">")
				if err != nil {
					return err
				}
				var var_31 string = fmt.Sprint(props.total)
				_, err = templBuffer.WriteString(templ.EscapeString(var_31))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span> ")
				if err != nil {
					return err
				}
				var_32 := `assets`
				_, err = templBuffer.WriteString(var_32)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p><nav><ul class=\"flex items-center text-sm leading-tight bg-white border divide-x rounded h-9 text-neutral-500 divide-neutral-200 border-neutral-200\"><li class=\"h-full\"><a href=\"#\" class=\"relative inline-flex items-center h-full px-3 ml-0 rounded-l group hover:text-blue-500\"><span>")
				if err != nil {
					return err
				}
				var_33 := `Previous`
				_, err = templBuffer.WriteString(var_33)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></a></li><li class=\"hidden h-full md:block\"><a href=\"#\" class=\"relative inline-flex items-center h-full px-3 text-neutral-900 group bg-gray-50\"><span>")
				if err != nil {
					return err
				}
				var_34 := `1`
				_, err = templBuffer.WriteString(var_34)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span><span class=\"box-content absolute bottom-0 left-0 w-full h-px -mx-px translate-y-px border-l border-r bg-blue-500 border-blue-500\"></span></a></li><li class=\"hidden h-full md:block\"><a href=\"#\" class=\"relative inline-flex items-center h-full px-3 group hover:text-neutral-900\"><span>")
				if err != nil {
					return err
				}
				var_35 := `2`
				_, err = templBuffer.WriteString(var_35)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span><span class=\"box-content absolute bottom-0 w-0 h-px -mx-px duration-200 ease-out translate-y-px border-transparent bg-blue-500 group-hover:border-l group-hover:border-r group-hover:border-blue-500 left-1/2 group-hover:left-0 group-hover:w-full\"></span></a></li><li class=\"hidden h-full md:block\"><div class=\"relative inline-flex items-center h-full px-2.5 group\"><span>")
				if err != nil {
					return err
				}
				var_36 := `...`
				_, err = templBuffer.WriteString(var_36)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></div></li><li class=\"hidden h-full md:block\"><a href=\"#\" class=\"relative inline-flex items-center h-full px-3 group hover:text-neutral-900\"><span>")
				if err != nil {
					return err
				}
				var_37 := `6`
				_, err = templBuffer.WriteString(var_37)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span><span class=\"box-content absolute bottom-0 w-0 h-px -mx-px duration-200 ease-out translate-y-px border-transparent bg-blue-500 group-hover:border-l group-hover:border-r group-hover:border-blue-500 left-1/2 group-hover:left-0 group-hover:w-full\"></span></a></li><li class=\"hidden h-full md:block\"><a href=\"#\" class=\"relative inline-flex items-center h-full px-3 group hover:text-neutral-900\"><span>")
				if err != nil {
					return err
				}
				var_38 := `7`
				_, err = templBuffer.WriteString(var_38)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span><span class=\"box-content absolute bottom-0 w-0 h-px -mx-px duration-200 ease-out translate-y-px border-transparent bg-blue-500 group-hover:border-l group-hover:border-r group-hover:border-blue-500 left-1/2 group-hover:left-0 group-hover:w-full\"></span></a></li><li class=\"h-full\"><a href=\"#\" class=\"relative inline-flex items-center h-full px-3 ml-0 rounded-l group hover:text-blue-500\"><span>")
				if err != nil {
					return err
				}
				var_39 := `Next`
				_, err = templBuffer.WriteString(var_39)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></a></li></ul></nav></div>")
				if err != nil {
					return err
				}
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = views.Layout().Render(templ.WithChildren(ctx, var_2), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}
