package assets

import "fmt"
import "strings"
import "github.com/kodeshack/stuff/views"

templ viewAssetPage(asset *Asset, decimalSeparator string) {
	@views.Layout() {
		<header class="my-5 flex flex-row items-start justify-start lg:items-center">
			<h1 class="font-extrabold md:text-2xl lg:text-4xl flex flex-col items-start sm:flex-row sm:items-center">
				{ asset.Name }
				<span class="ms-2 text-slate-400"> ({ asset.Tag })</span>

				@statusBadge(asset.Status, "sm:ms-3 sm:mt-1")
			</h1>

			<div class="sm:mt-3 sm:mt-0 flex-1 flex justify-end">
				@views.DropdownButton(views.DropdownButtonProps{
					Class: "",
					ButtonClass: "",
					ButtonText: "Actions",
				}) {
					<ul class="py-2 text-sm w-full">
						<li>
							<a href={templ.SafeURL(fmt.Sprintf("/assets/%d/edit", asset.ID))} class="block px-4 py-2 hover:bg-gray-100">Edit</a>
						</li>
						<li>
							<a href={templ.SafeURL(fmt.Sprintf("/assets/%d/delete", asset.ID))} class="block px-4 py-2 text-red-700 hover:bg-gray-100">Delete</a>
						</li>
					</ul>
				}
			</div>
		</header>

		<div class="grid grid-cols-1 gap-4 lg:grid-cols-3 lg:gap-5">
			<div class="lg:col-span-2">
				<div class="flow-root">
					<dl class="divide-y divide-gray-100 text-sm">
						<div class="grid grid-cols-1 gap-1 p-3 odd:bg-gray-50 sm:grid-cols-3 sm:gap-4" >
							<dt class="font-medium text-gray-900">Category</dt>
							<dd class="text-gray-700 sm:col-span-2">{ asset.Category }</dd>
						</div>

						<div class="grid grid-cols-1 gap-1 p-3 odd:bg-gray-50 sm:grid-cols-3 sm:gap-4" >
							<dt class="font-medium text-gray-900">Manufacturer</dt>
							<dd class="text-gray-700 sm:col-span-2">{ asset.Manufacturer }</dd>
						</div>

						<div class="grid grid-cols-1 gap-1 p-3 odd:bg-gray-50 sm:grid-cols-3 sm:gap-4" >
							<dt class="font-medium text-gray-900">Model</dt>
							<dd class="text-gray-700 sm:col-span-2">
								{ asset.Model } {" "}
								if asset.ModelNo != "" {
									({ asset.ModelNo })
								}
							</dd>
						</div>

						<div class="grid grid-cols-1 gap-1 p-3 odd:bg-gray-50 sm:grid-cols-3 sm:gap-4" >
							<dt class="font-medium text-gray-900">SerialNo</dt>
							<dd class="text-gray-700 sm:col-span-2">{ asset.SerialNo }</dd>
						</div>

						<div class="grid grid-cols-1 gap-1 p-3 odd:bg-gray-50 sm:grid-cols-3 sm:gap-4" >
							<dt class="font-medium text-gray-900">Warranty Until</dt>
							<dd class="text-gray-700 sm:col-span-2">
								if !asset.WarrantyUntil.IsZero() {
									{ asset.WarrantyUntil.Format("2006-01-02") }
								}
							</dd>
						</div>

						<div class="grid grid-cols-1 gap-1 p-3 odd:bg-gray-50 sm:grid-cols-3 sm:gap-4" >
							<dt class="font-medium text-gray-900">Location</dt>
							<dd class="text-gray-700 sm:col-span-2">
								{ asset.Location } <br />
								if asset.PositionCode != "" {
									Code: <strong>{ asset.PositionCode }</strong>
								}
							</dd>
						</div>

						<div class="grid grid-cols-1 gap-1 p-3 odd:bg-gray-50 sm:grid-cols-3 sm:gap-4" >
							<dt class="font-medium text-gray-900">Notes</dt>
							<dd class="text-gray-700 sm:col-span-2">
								<p>
									for _, l := range strings.Split(asset.Notes, "\n") {
										{ l }<br />
									}
								</p>
							</dd>
						</div>


						<div class="grid grid-cols-1 gap-1 p-3 odd:bg-gray-50 sm:grid-cols-3 sm:gap-4" >
							<h3 class="font-bold text-lg text-gray-900">Purchase Info</h3>
						</div>

						<div class="grid grid-cols-1 gap-1 p-3 odd:bg-gray-50 sm:grid-cols-3 sm:gap-4" >
							<dt class="font-medium text-gray-900">Supplier</dt>
							<dd class="text-gray-700 sm:col-span-2">{ asset.PurchaseInfo.Supplier }</dd>
						</div>

						<div class="grid grid-cols-1 gap-1 p-3 odd:bg-gray-50 sm:grid-cols-3 sm:gap-4" >
							<dt class="font-medium text-gray-900">Order No.</dt>
							<dd class="text-gray-700 sm:col-span-2">{ asset.PurchaseInfo.OrderNo }</dd>
						</div>

						<div class="grid grid-cols-1 gap-1 p-3 odd:bg-gray-50 sm:grid-cols-3 sm:gap-4" >
							<dt class="font-medium text-gray-900">Purchase Date</dt>
							<dd class="text-gray-700 sm:col-span-2">{ asset.PurchaseInfo.Date.Format("2006-02-01") }</dd>
						</div>

						<div class="grid grid-cols-1 gap-1 p-3 odd:bg-gray-50 sm:grid-cols-3 sm:gap-4" >
							<dt class="font-medium text-gray-900">Amount</dt>
							<dd class="text-gray-700 sm:col-span-2">
								{ asset.PurchaseInfo.Amount.Format(decimalSeparator) } {" "}
								{ asset.PurchaseInfo.Currency }
							</dd>
						</div>
					</dl>
				</div>
			</div>

			<div class="rounded-md bg-gray-100 py-5">
				<img src={asset.ImageURL} class="w-full h-auto object-scale-down max-h-[500px]" />
			</div>
		</div>
	}
}

templ statusBadge(status Status, class string) {
	<span
		class={
			templ.SafeClass("rounded text-sm px-2.5 py-0.5 font-bold"),
			templ.SafeClass(class),
			templ.KV("bg-blue-500 text-blue-100", status == StatusInStorage),
			templ.KV("bg-emerald-100 text-emerald-700", status == StatusInUse),
			templ.KV("bg-slate-300 text-slate-700", status == StatusArchived),
		}
	>
		{ string(status) }
	</span>
}
