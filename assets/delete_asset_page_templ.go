// Code generated by templ@v0.2.316 DO NOT EDIT.

package assets

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "fmt"
import "github.com/kodeshack/stuff/views"

type deleteAssetPageProps struct {
	asset     *Asset
	errMsg    string
	csrfToken string
}

func deleteAssetPage(props deleteAssetPageProps) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var_2 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			_, err = templBuffer.WriteString("<h1 class=\"my-5 font-extrabold md:text-2xl lg:text-4xl text-center\">")
			if err != nil {
				return err
			}
			var_3 := `Are you sure you want to delete "`
			_, err = templBuffer.WriteString(var_3)
			if err != nil {
				return err
			}
			var var_4 string = props.asset.Name
			_, err = templBuffer.WriteString(templ.EscapeString(var_4))
			if err != nil {
				return err
			}
			var_5 := `"?`
			_, err = templBuffer.WriteString(var_5)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h1> <form method=\"post\" action=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("/assets/%d/delete", props.asset.ID)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"><input type=\"hidden\" name=\"stuff.csrf.token\" value=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(props.csrfToken))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"><div class=\"flex w-full items-center justify-center\">")
			if err != nil {
				return err
			}
			var_6 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
				templBuffer, templIsBuffer := w.(*bytes.Buffer)
				if !templIsBuffer {
					templBuffer = templ.GetBuffer()
					defer templ.ReleaseBuffer(templBuffer)
				}
				var_7 := `Delete`
				_, err = templBuffer.WriteString(var_7)
				if err != nil {
					return err
				}
				if !templIsBuffer {
					_, err = io.Copy(w, templBuffer)
				}
				return err
			})
			err = views.Button(views.ButtonProps{
				Type:  "submit",
				Class: "btn-danger",
			}).Render(templ.WithChildren(ctx, var_6), templBuffer)
			if err != nil {
				return err
			}
			var_8 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
				templBuffer, templIsBuffer := w.(*bytes.Buffer)
				if !templIsBuffer {
					templBuffer = templ.GetBuffer()
					defer templ.ReleaseBuffer(templBuffer)
				}
				var_9 := `Cancel`
				_, err = templBuffer.WriteString(var_9)
				if err != nil {
					return err
				}
				if !templIsBuffer {
					_, err = io.Copy(w, templBuffer)
				}
				return err
			})
			err = views.ButtonLink("/assets", "ms-5 btn-muted").Render(templ.WithChildren(ctx, var_8), templBuffer)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</div></form>")
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = views.Layout().Render(templ.WithChildren(ctx, var_2), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}
